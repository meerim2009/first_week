{"ast":null,"code":"var _jsxFileName = \"/Users/meerim/Desktop/first_week/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends React.Component {\n  constructor() {\n    var _s = $RefreshSig$();\n\n    super(...arguments);\n    this.state = {\n      count: 0,\n      timer: 0,\n      control: false\n    };\n\n    this.onIncrease = () => {\n      this.setState(oldState => {\n        return {\n          count: oldState.count + 1\n        };\n      });\n    };\n\n    this.onDecrease = () => {\n      this.setState(oldState => {\n        return {\n          count: oldState.count - 1\n        };\n      });\n    };\n\n    this.autoDecrease = _s(() => {\n      _s();\n\n      useEffect(() => {\n        const id = setInterval(() => {\n          setCount(1 + 1);\n        }, 1000);\n        return () => clearInterval(id);\n      }, []);\n    }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n    this.shouldComponentUpdate = (newProps, newState) => {\n      if (newState.count !== this.state.count) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    console.log('WILL MOUNT');\n  }\n\n  componentDidMount() {\n    this.myMount = setInterval(() => {\n      console.log('>>>>>>> HELLO ARSENIY');\n    }, 2000);\n  }\n\n  UNSAFE_componentWillUpdate() {\n    console.log('WILL UPDATE');\n  }\n\n  componentDidUpdate() {\n    console.log('DID UPDATE');\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myMount);\n  }\n\n  render() {\n    console.log('RENDER');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: this.onIncrease,\n        type: \"button\",\n        value: \"Increase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: this.onDecrease,\n        type: \"button\",\n        value: \"Decrease\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showCounter: true\n    };\n\n    this.onToggleCounter = () => {\n      this.setState(oldState => {\n        return {\n          showCounter: !oldState.showCounter\n        };\n      });\n    };\n  }\n\n  render() {\n    const content = this.state.showCounter ? /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 50\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [content, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onToggleCounter,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 113,\n  columnNumber: 5\n}, this), document.getElementById('root'));\nexport default Counter;","map":{"version":3,"sources":["/Users/meerim/Desktop/first_week/src/index.js"],"names":["React","ReactDOM","useEffect","useState","Counter","Component","state","count","timer","control","onIncrease","setState","oldState","onDecrease","autoDecrease","id","setInterval","setCount","clearInterval","shouldComponentUpdate","newProps","newState","UNSAFE_componentWillMount","console","log","componentDidMount","myMount","UNSAFE_componentWillUpdate","componentDidUpdate","componentWillUnmount","render","App","showCounter","onToggleCounter","content","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {useEffect, useState} from 'react';\n\nclass Counter extends React.Component {\n    state = {\n        count: 0,\n        timer: 0,\n        control: false\n    }\n\n    onIncrease = () => {\n        this.setState((oldState) => {\n            return {\n                count: oldState.count + 1\n            }\n        })\n    }\n    onDecrease = () => {\n        this.setState((oldState) => {\n            return {\n                count: oldState.count - 1\n            }\n        })\n    }\n\n  autoDecrease = () => {\n\n  useEffect(\n\n    () => {\n      const id = setInterval(() => {\n        setCount(1 + 1);\n      }, 1000);\n      return () => clearInterval(id);\n    },\n    []\n  );\n\n\n}\n\n\n\n\n\n\n    UNSAFE_componentWillMount() {\n        console.log('WILL MOUNT')\n    }\n    componentDidMount() {\n        this.myMount = setInterval(() => {\n            console.log('>>>>>>> HELLO ARSENIY')\n        }, 2000)\n    }\n    shouldComponentUpdate = (newProps, newState) =>{\n        if (newState.count !== this.state.count) {\n            return true\n        }else {\n            return false\n        }\n    }\n\n    UNSAFE_componentWillUpdate() {\n        console.log('WILL UPDATE')\n    }\n    componentDidUpdate() {\n        console.log('DID UPDATE')\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.myMount)\n    }\n\n\n    render () {\n        console.log('RENDER')\n        return (\n            <div>\n                <p>{this.state.count}</p>\n                <input onClick={this.onIncrease} type=\"button\" value='Increase'/>\n                <input onClick={this.onDecrease} type=\"button\" value='Decrease'/>\n            </div>\n        )\n    }\n\n}\n\nclass App extends React.Component{\n    state = {\n        showCounter: true\n    }\n    onToggleCounter = () => {\n        this.setState((oldState) => {\n            return {\n                showCounter: !oldState.showCounter\n            }\n        })\n    }\n    render () {\n        const content = this.state.showCounter ? <Counter /> : null\n        return (\n            <div>\n                {content}\n                <button onClick={this.onToggleCounter}>Reset</button>\n            </div>\n        )\n    }\n\n}\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nexport default Counter\n\n"]},"metadata":{},"sourceType":"module"}