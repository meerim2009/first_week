{"ast":null,"code":"var _jsxFileName = \"/Users/meerim/Desktop/first_week/src/index.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import {useEffect} from 'react';\n//\n// class Counter extends React.Component {\n//     state = {\n//         count: 0\n//     }\n//\n//     onIncrease = () => {\n//         this.setState((oldState) => {\n//             return {\n//                 count: oldState.count + 1\n//             }\n//         })\n//     }\n//     onDecrease = () => {\n//         this.setState((oldState) => {\n//             return {\n//                 count: oldState.count - 1\n//             }\n//         })\n//     }\n//\n//     UNSAFE_componentWillMount() {\n//         console.log('WILL MOUNT')\n//     }\n//     componentDidMount() {\n//         this.myMount = setInterval(() => {\n//             console.log('>>>>>>> HELLO ARSENIY')\n//         }, 2000)\n//     }\n//     shouldComponentUpdate = (newProps, newState) =>{\n//         if (newState.count !== this.state.count) {\n//             return true\n//         }else {\n//             return false\n//         }\n//     }\n//\n//     UNSAFE_componentWillUpdate() {\n//         console.log('WILL UPDATE')\n//     }\n//     componentDidUpdate() {\n//         console.log('DID UPDATE')\n//     }\n//\n//     componentWillUnmount() {\n//         clearInterval(this.myMount)\n//     }\n//\n//\n//     render () {\n//         console.log('RENDER')\n//         return (\n//             <div>\n//                 <p>{this.state.count}</p>\n//                 <input onClick={this.onIncrease} type=\"button\" value='Increase'/>\n//                 <input onClick={this.onDecrease} type=\"button\" value='Decrease'/>\n//             </div>\n//         )\n//     }\n//\n// }\n//\n// class App extends React.Component{\n//     state = {\n//         showCounter: true\n//     }\n//     onToggleCounter = () => {\n//         this.setState((oldState) => {\n//             return {\n//                 showCounter: !oldState.showCounter\n//             }\n//         })\n//     }\n//     render () {\n//         const content = this.state.showCounter ? <Counter /> : null\n//         return (\n//             <div>\n//                 {content}\n//                 <button onClick={this.onToggleCounter}>Reset</button>\n//             </div>\n//         )\n//     }\n//\n// }\n//\n//\n// ReactDOM.render(\n//     <App />,\n//   document.getElementById('root')\n// );\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const [timer, setTimer] = useState(0);\n  const [counter, setCounter] = useState(0);\n  const [control, setControl] = useState(false);\n\n  function increment() {\n    setControl(false);\n    setCounter(counter + 1);\n  }\n\n  function decrement() {\n    setCounter(counter - 1);\n  }\n\n  function reset() {\n    setTimer(0);\n    setCounter(0);\n  }\n\n  useEffect(() => {\n    const autoDec = setInterval(() => {\n      if (timer && timer < 1000) {\n        setControl(true);\n        setTimer(timer - 1);\n      }\n\n      if (!timer) {\n        setControl(false);\n      }\n    }, 1000);\n    return () => clearInterval(autoDec);\n  }, [timer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [counter, \"-----\", timer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: control,\n      onClick: increment,\n      children: \"increase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: control,\n      onClick: decrement,\n      children: \"decrease\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'number',\n      value: control ? timer : null,\n      onChange: e => setTimer(e.target.value),\n      placeholder: \"\\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"TILlNVt5UsJncCjnl2jMzaBrOf0=\");\n\n_c = Counter;\nReactDOM.render(document.getElementById('root'));\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/meerim/Desktop/first_week/src/index.js"],"names":["React","useEffect","useState","ReactDOM","Counter","timer","setTimer","counter","setCounter","control","setControl","increment","decrement","reset","autoDec","setInterval","clearInterval","e","target","value","render","document","getElementById"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACK,OAAD,EAASC,UAAT,IAAuBN,QAAQ,CAAC,CAAD,CAArC;AAGA,QAAM,CAACO,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,KAAD,CAArC;;AAEA,WAASS,SAAT,GAAqB;AACjBD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACFF,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;;AAED,WAASK,SAAT,GAAqB;AACjBJ,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH;;AAED,WAASM,KAAT,GAAiB;AACbP,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAE,IAAAA,UAAU,CAAC,CAAD,CAAV;AACH;;AAEDP,EAAAA,SAAS,CAAC,MAAI;AAEV,UAAMa,OAAO,GAAGC,WAAW,CAAC,MAAI;AAC5B,UAAGV,KAAK,IAAIA,KAAK,GAAE,IAAnB,EAAwB;AACpBK,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,QAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACH;;AACD,UAAG,CAACA,KAAJ,EAAU;AACNK,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AAGJ,KAV0B,EAUzB,IAVyB,CAA3B;AAYA,WAAO,MAAKM,aAAa,CAACF,OAAD,CAAzB;AACH,GAfQ,EAeP,CAACT,KAAD,CAfO,CAAT;AAiBE,sBACE;AAAA,4BACE;AAAA,iBAAKE,OAAL,WAAmBF,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,QAAQ,EAAEI,OAAlB;AAA2B,MAAA,OAAO,EAAEE,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,QAAQ,EAAEF,OAAlB;AAA2B,MAAA,OAAO,EAAEG,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAO,MAAA,IAAI,EAAE,QAAb;AAAuB,MAAA,KAAK,EAAEJ,OAAO,GAACJ,KAAD,GAAO,IAA5C;AAAkD,MAAA,QAAQ,EAAEY,CAAC,IAAGX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxE;AAA0F,MAAA,WAAW,EAAC;AAAtG;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhDD;;GAAMf,O;;KAAAA,O;AAkDND,QAAQ,CAACiB,MAAT,CAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;AAKA,eAAelB,OAAf","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import {useEffect} from 'react';\n//\n// class Counter extends React.Component {\n//     state = {\n//         count: 0\n//     }\n//\n//     onIncrease = () => {\n//         this.setState((oldState) => {\n//             return {\n//                 count: oldState.count + 1\n//             }\n//         })\n//     }\n//     onDecrease = () => {\n//         this.setState((oldState) => {\n//             return {\n//                 count: oldState.count - 1\n//             }\n//         })\n//     }\n//\n//     UNSAFE_componentWillMount() {\n//         console.log('WILL MOUNT')\n//     }\n//     componentDidMount() {\n//         this.myMount = setInterval(() => {\n//             console.log('>>>>>>> HELLO ARSENIY')\n//         }, 2000)\n//     }\n//     shouldComponentUpdate = (newProps, newState) =>{\n//         if (newState.count !== this.state.count) {\n//             return true\n//         }else {\n//             return false\n//         }\n//     }\n//\n//     UNSAFE_componentWillUpdate() {\n//         console.log('WILL UPDATE')\n//     }\n//     componentDidUpdate() {\n//         console.log('DID UPDATE')\n//     }\n//\n//     componentWillUnmount() {\n//         clearInterval(this.myMount)\n//     }\n//\n//\n//     render () {\n//         console.log('RENDER')\n//         return (\n//             <div>\n//                 <p>{this.state.count}</p>\n//                 <input onClick={this.onIncrease} type=\"button\" value='Increase'/>\n//                 <input onClick={this.onDecrease} type=\"button\" value='Decrease'/>\n//             </div>\n//         )\n//     }\n//\n// }\n//\n// class App extends React.Component{\n//     state = {\n//         showCounter: true\n//     }\n//     onToggleCounter = () => {\n//         this.setState((oldState) => {\n//             return {\n//                 showCounter: !oldState.showCounter\n//             }\n//         })\n//     }\n//     render () {\n//         const content = this.state.showCounter ? <Counter /> : null\n//         return (\n//             <div>\n//                 {content}\n//                 <button onClick={this.onToggleCounter}>Reset</button>\n//             </div>\n//         )\n//     }\n//\n// }\n//\n//\n// ReactDOM.render(\n//     <App />,\n//   document.getElementById('root')\n// );\n\n\nimport React, { useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom';\n\nconst Counter = () => {\n\nconst [timer,setTimer] = useState(0)\nconst [counter,setCounter] = useState(0)\n\n\nconst [control,setControl] = useState(false)\n\nfunction increment (){\n    setControl(false)\n  setCounter(counter + 1)\n}\n\nfunction decrement (){\n    setCounter(counter - 1)\n}\n\nfunction reset (){\n    setTimer(0)\n    setCounter(0)\n}\n\nuseEffect(()=>{\n\n    const autoDec = setInterval(()=>{\n        if(timer && timer< 1000){\n            setControl(true)\n            setTimer(timer-1)\n        }\n        if(!timer){\n            setControl(false)\n        }\n\n\n    },1000)\n\n    return ()=> clearInterval(autoDec)\n},[timer])\n\n  return (\n    <div>\n      <h1>{counter}-----{timer}</h1>\n      <button disabled={control} onClick={increment}>increase</button>\n      <button disabled={control} onClick={decrement}>decrease</button>\n      <button onClick={reset}>reset</button>\n      <input type={'number'} value={control?timer:null} onChange={e=> setTimer(e.target.value)} placeholder='введите'/>\n    </div>\n  )\n}\n\nReactDOM.render(\n    \n  document.getElementById('root')\n);\n\nexport default Counter\n\n"]},"metadata":{},"sourceType":"module"}