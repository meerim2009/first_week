{"ast":null,"code":"// import React from 'react';\n// import ReactDOM from 'react-dom';\n//\n// class Counter extends React.Component {\n//     state = {\n//         count: 0\n//     }\n//\n//     onIncrease = () => {\n//         this.setState((oldState) => {\n//             return {\n//                 count: oldState.count + 1\n//             }\n//         })\n//     }\n//     onDecrease = () => {\n//         this.setState((oldState) => {\n//             return {\n//                 count: oldState.count - 1\n//             }\n//         })\n//     }\n//\n//     UNSAFE_componentWillMount() {\n//         console.log('WILL MOUNT')\n//     }\n//     componentDidMount() {\n//         this.myMount = setInterval(() => {\n//             console.log('>>>>>>> HELLO ARSENIY')\n//         }, 2000)\n//     }\n//     shouldComponentUpdate = (newProps, newState) =>{\n//         if (newState.count !== this.state.count) {\n//             return true\n//         }else {\n//             return false\n//         }\n//     }\n//\n//     UNSAFE_componentWillUpdate() {\n//         console.log('WILL UPDATE')\n//     }\n//     componentDidUpdate() {\n//         console.log('DID UPDATE')\n//     }\n//\n//     componentWillUnmount() {\n//         clearInterval(this.myMount)\n//     }\n//\n//\n//     render () {\n//         console.log('RENDER')\n//         return (\n//             <div>\n//                 <p>{this.state.count}</p>\n//                 <input onClick={this.onIncrease} type=\"button\" value='Increase'/>\n//                 <input onClick={this.onDecrease} type=\"button\" value='Decrease'/>\n//             </div>\n//         )\n//     }\n//\n// }\n//\n// class App extends React.Component{\n//     state = {\n//         showCounter: true\n//     }\n//     onToggleCounter = () => {\n//         this.setState((oldState) => {\n//             return {\n//                 showCounter: !oldState.showCounter\n//             }\n//         })\n//     }\n//     render () {\n//         const content = this.state.showCounter ? <Counter /> : null\n//         return (\n//             <div>\n//                 {content}\n//                 <button onClick={this.onToggleCounter}>Reset</button>\n//             </div>\n//         )\n//     }\n//\n// }\n// function makeCounter() {\n//   let count = 0;\n//\n//   function counter() {\n//     return count++;\n//   }\n//\n//   counter.set = value => count = value;\n//\n//   counter.decrease = () => count--;\n//\n//   return counter;\n// }\n// ReactDOM.render(\n//     <App />,\n//   document.getElementById('root')\n// );\n//\n//","map":{"version":3,"sources":["/Users/meerim/Desktop/first_week/src/index.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n//\n// class Counter extends React.Component {\n//     state = {\n//         count: 0\n//     }\n//\n//     onIncrease = () => {\n//         this.setState((oldState) => {\n//             return {\n//                 count: oldState.count + 1\n//             }\n//         })\n//     }\n//     onDecrease = () => {\n//         this.setState((oldState) => {\n//             return {\n//                 count: oldState.count - 1\n//             }\n//         })\n//     }\n//\n//     UNSAFE_componentWillMount() {\n//         console.log('WILL MOUNT')\n//     }\n//     componentDidMount() {\n//         this.myMount = setInterval(() => {\n//             console.log('>>>>>>> HELLO ARSENIY')\n//         }, 2000)\n//     }\n//     shouldComponentUpdate = (newProps, newState) =>{\n//         if (newState.count !== this.state.count) {\n//             return true\n//         }else {\n//             return false\n//         }\n//     }\n//\n//     UNSAFE_componentWillUpdate() {\n//         console.log('WILL UPDATE')\n//     }\n//     componentDidUpdate() {\n//         console.log('DID UPDATE')\n//     }\n//\n//     componentWillUnmount() {\n//         clearInterval(this.myMount)\n//     }\n//\n//\n//     render () {\n//         console.log('RENDER')\n//         return (\n//             <div>\n//                 <p>{this.state.count}</p>\n//                 <input onClick={this.onIncrease} type=\"button\" value='Increase'/>\n//                 <input onClick={this.onDecrease} type=\"button\" value='Decrease'/>\n//             </div>\n//         )\n//     }\n//\n// }\n//\n// class App extends React.Component{\n//     state = {\n//         showCounter: true\n//     }\n//     onToggleCounter = () => {\n//         this.setState((oldState) => {\n//             return {\n//                 showCounter: !oldState.showCounter\n//             }\n//         })\n//     }\n//     render () {\n//         const content = this.state.showCounter ? <Counter /> : null\n//         return (\n//             <div>\n//                 {content}\n//                 <button onClick={this.onToggleCounter}>Reset</button>\n//             </div>\n//         )\n//     }\n//\n// }\n// function makeCounter() {\n//   let count = 0;\n//\n//   function counter() {\n//     return count++;\n//   }\n//\n//   counter.set = value => count = value;\n//\n//   counter.decrease = () => count--;\n//\n//   return counter;\n// }\n// ReactDOM.render(\n//     <App />,\n//   document.getElementById('root')\n// );\n//\n//\n"]},"metadata":{},"sourceType":"module"}